View(read_xlsx("data/Athletes.xlsx"))
peru <- read_xlsx("data/Athletes.xlsx")
atletas <- read_xlsx("data/Athletes.xlsx")
dim(atletas)
str(atletas)
colnames(atletas) <- c("nombre","pais","disciplina")
str(atletas)
df_status(atletas)
peru <- atletas %>% filter(pais == "Peru")
dim(peru)
View(peru)
df_status(peru)
View(atletas)
atletas.pais <- atletas %>% group_by(pais)
atletas.pais
atletas.pais <- atletas %>% group_by(pais) %>% count()
atletas.pais
View(atletas.pais)
# comprobando si hay datos duplicados
# en la columna nombre
nrow(atletas)
df_status(atletas$nombre)
unique(atletas$nombre)
length(unique(atletas$nombre))
# comprobando si hay datos duplicados
# en la columna nombre
nrow(atletas)[1]          # hay 11085 registros
df_status(atletas$nombre) # hay 11062 valores unicos
length(unique(atletas$nombre))
# al parecer hay datos repetidos
duplicated(atletas$nombre)
# al parecer hay datos repetidos
atletas$nombre[duplicated(atletas$nombre)]
# al parecer hay datos repetidos
dup <- atletas$nombre[duplicated(atletas$nombre)]
dup %in% atletas$nombre
dup
which(dup %in% atletas$nombre)
which(atletas$nombre %in% dup)
head(atletas[ind,])
atletas[254,]
ind
ind <- which(atletas$nombre %in% dup)
head(atletas[ind,])
atletas.dup <- atletas[ind,]
View(atletas.pais)
View(atletas.dup)
View(atletas)
duplicated(atletas.dup$disciplina)
atletas.dup %>% pivot_longer(disciplina)
view(atletas.dup %>% pivot_longer(disciplina))
view(atletas.dup %>% pivot_wider(disciplina))
view(atletas.dup %>% pivot_wider(id_cols = nombre))
view(atletas.dup %>% pivot_wider(id_cols = nombre,names_from = disciplina))
view(atletas.dup %>% pivot_wider(id_cols = nombre,names_from = disciplina))
view(atletas.dup %>% pivot_wider(id_cols = nombre,names_from = disciplina, values_fill = c("disciplina 1","disciplina2")))
view(atletas.dup %>% pivot_wider(id_cols = nombre,values_from = _from = disciplina))
atletas.dup <- atletas[ind,]
atletas.dup
table(atletas.dup$nombre)
table(atletas.dup$nombre)==2
num_discplina <- c()
table(atletas.dup$nombre)
table(atletas.dup$nombre) ==3
sum(table(atletas.dup$nombre) ==3)
table(atletas.dup$nombre) == 2
sum(table(atletas.dup$nombre) == 2)
c("disciplina_1", "disciplina_2")
reo()
rep(c("disciplina_1", "disciplina_2"),23)
num_discplina <- rep(c("disciplina_1", "disciplina_2"),23)
atletas.dup$num_disciplina <- num_disciplina
num_disciplina <- rep(c("disciplina_1", "disciplina_2"),23)
atletas.dup$num_disciplina <- num_disciplina
atletas.dup %>% pivot_wider(names_from = num_disciplina,
values_from = disciplina)
atletas.dup %>% pivot_wider(names_from = num_disciplina,
values_from = disciplina) -> atletas.dup2
View(atletas.dup2)
atletas.dup %>%
select(-pais) %>%
pivot_wider(names_from = num_disciplina,
values_from = disciplina) -> atletas.dup2
# atletas.dup2 : muestra los atletas que
# participaron en 2 disciplinas.
# Analizaremos si disciplina 1 y discplina
# 2 coincidem
atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2
# atletas.dup2 : muestra los atletas que
# participaron en 2 disciplinas.
# Analizaremos si disciplina 1 y discplina
# 2 coincidem
atletas.dup2[atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2]
# atletas.dup2 : muestra los atletas que
# participaron en 2 disciplinas.
# Analizaremos si disciplina 1 y discplina
# 2 coincidem
atletas.dup2[atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2,]
# atletas.dup2 : muestra los atletas que
# participaron en 2 disciplinas.
# Analizaremos si disciplina 1 y discplina
# 2 coincidem
which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
# entonces, existen 2 registros duplicados
which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
# entonces, existen 2 registros duplicados,
# se encuentran en las posiciones:
which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
# entonces, existen 2 registros duplicados,
# se encuentran en las posiciones:
ind.dup <- which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
nombre.dup <- atletas.dup2$nombre[ind.dup]
nombre.dup
# Se debe eliminar estos 2 registros de la data original
atletas
# Se debe eliminar estos 2 registros de la data original
atletas$nombre %in% nombre.dup
# Se debe eliminar estos 2 registros de la data original
wich(atletas$nombre %in% nombre.dup)
# Se debe eliminar estos 2 registros de la data original
which(atletas$nombre %in% nombre.dup)
# Se debe eliminar estos 2 registros de la data original
ind2 <- which(atletas$nombre %in% nombre.dup)
atletas[ind1,]
atletas[ind2,]
atletas[ind2,]
# al parecer, hubo un error de digitacion. Se la buscó en
# Google. Todo indica que Portela Teresa tiene nacionalidad
# espaniola. Por lo tanto, se eliminaran las filas 255 y 7835.
atletas2 <- atletas[-c(255,7835)]
# al parecer, hubo un error de digitacion. Se la buscó en
# Google. Todo indica que Portela Teresa tiene nacionalidad
# espaniola. Por lo tanto, se eliminaran las filas 255 y 7835.
atletas2 <- atletas[-c(255,7835),]
dim(atletas)
dim(atletas2)
View(atletas2)
nombre.dup
ind.dup
# Analizaremos si disciplina 1 y discplina 2 coinciden :
atletas.dup2[atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2,]
atletas.dup2
atletas2 %>% group_by(pais)
atletas2 %>% group_by(pais) %>% count()
atl.pais <- atletas2 %>% group_by(pais) %>% count()
sum(atl.pais$n)
dim(atletas2)
atl.pais
atl.pais <- atletas2 %>% group_by(pais) %>% count(sort = T)
atl.pais
atl.pais <- atletas2 %>% group_by(pais) %>% count(sort = T)
peru <- atletas2 %>% filter(pais == "Peru")
peru
duplicated(peru$nombre)
View(peru)
peru <- atletas2 %>%
filter(pais == "Peru") %>%
group_by(disciplina) %>%
count()
peru
peru <- atletas2 %>%
filter(pais == "Peru") %>%
group_by(disciplina) %>%
count(sort = T)
peru
nom <- c("Ana","Ana","Ana","Pedro","Pedro","Luis")
pa <- c("peru","peru","peru","chile","chile","colombia")
dis <- c("d1","d2","d3","d2","d5","d3")
df <- data.frame(nom,pa, dis)
df
nom <- c("ana","ana","ana","pedro","pedro","luis")
pa <- c("peru","peru","peru","chile","chile","colombia")
dis <- c("d1","d2","d3","d2","d5","d3")
df <- data.frame(nom,pa, dis)
df
df %>% group_by(pa) %>% count
df %>% group_by(pa) %>% count
#
df %>% summarise(n = n())
colnames(df)
#
df %>% summarise(conteo = n())
#
df %>% group_by(pais) %>% summarise(conteo = n())
#
df %>% group_by(pa) %>% summarise(conteo = n())
dis <- c("d1","d2","d3","d2","d5","d3","d6")
nom <- c("ana","ana","ana","pedro","pedro","luis","leandro")
pa <- c("peru","peru","peru","chile","chile","colombia","peru")
dis <- c("d1","d2","d3","d2","d5","d3","d6")
df <- data.frame(nom,pa, dis)
colnames(df)
# numero de atletas por pais
df %>% group_by(pa) %>% count
#
df %>% group_by(pa) %>% summarise(conteo = n())
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
nom <- c("ana","ana","ana","pedro","pedro","luis","leandro","nadia")
pa <- c("peru","peru","peru","chile","chile","colombia","peru","colombia")
dis <- c("d1","d2","d3","d2","d5","d3","d6","d9")
df <- data.frame(nom,pa, dis)
colnames(df)
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
#
df %>% group_by(pa) %>% summarise(conteo = n())
nom <- c("ana","ana","ana","pedro","pedro","luis","leandro","nadia","manuel")
pa <- c("peru","peru","peru","chile","chile","colombia","peru","colombia","peru")
dis <- c("d1","d2","d3","d2","d5","d3","d6","d9","d2")
df <- data.frame(nom,pa, dis)
colnames(df)
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
#
df %>% group_by(pa, dis) %>% summarise(conteo = n())
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
#
df %>% group_by(pa, dis) %>% summarise(conteo = n())
peru <- atletas2 %>%
filter(pais == "Peru") %>%
group_by(disciplina) %>%
count(sort = T)
peru
atl.pais <- atletas2 %>% group_by(pais) %>% count(sort = T)
atl.pais
View(atl.pais)
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count(conteo = n())
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count(conteo = n())
nom <- c("ana","ana","ana","pedro","pedro","luis","leandro","nadia","manuel")
pa <- c("peru","peru","peru","chile","chile","colombia","peru","colombia","peru")
dis <- c("d1","d2","d3","d2","d5","d3","d6","d9","d2")
df <- data.frame(nom,pa, dis)
colnames(df)
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count(conteo = n())
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
#
df %>% group_by(pa, dis) %>% summarise(conteo = n())
#
df %>% group_by(pa, nom) %>% summarise(conteo = n())
#
df %>% group_by(pa, nom) %>% summarise(conteo = n()) %>%
group_by(pa) %>% count()
df
atl.pais <- atletas2 %>% group_by(pais,nombre) %>% count(sort = T)
atl.pais
atl.pais <- atletas2 %>% group_by(pais,nombre) %>% count()
atl.pais
atl.pais
#
df %>% group_by(pa, nom) %>% summarise(conteo = n()) %>%
group_by(pa) %>% count()
df %>% group_by(pa, nom) %>% summarise(conteo = n())
atl.pais2 <- atl.pais %>% group_by(pais) %>% count()
atl.pais2
atl.pais2
atl.pais <- atletas2 %>% group_by(pais,nombre) %>% count()
atl.pais
atl.pais2 <- atl.pais %>% group_by(pais) %>% count(sort = T)
atl.pais2
atletas2 %>% group_by(pais) %>% count(sort = T)
atl.pais2
duplicated(atletas2$nombre)
which(duplicated(atletas2$nombre))
which(duplicated(atletas2$nombre))
atletas2[i,]
i <- which(duplicated(atletas2$nombre))
atletas2[i,]
View(atletas2[i,])
i
atletas2[c(319,320),]
atletas2[c(1703,1704),]
num_pais <- rep(c("pais_1", "pais_2"),23)
num_pais
atletas.dup$num_pais <- num_pais
atletas.dup2
atletas.dup %>%
select(-disciplina) %>%
pivot_wider(names_from = num_pais,
values_from = pais) -> atletas.dup3
atletas.dup2
atletas.dup3
atletas.dup2
View(atletas.dup3)
View(atletas.dup)
atletas.dup %>%
select(-pais, -num_pais) %>%
pivot_wider(names_from = num_disciplina,
values_from = disciplina) -> atletas.dup2
atletas.dup2
atletas.dup %>%
select(-disciplina,-num_disciplina) %>%
pivot_wider(names_from = num_pais,
values_from = pais) -> atletas.dup3
atletas.dup3
# entonces, existen 2 registros duplicados, se encuentran
# en las posiciones:
ind.dup2 <- which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
nombre.dup <- atletas.dup2$nombre[ind.dup2]
# Analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 == atletas.dup3$pais_2)
ind.dup3
which(atletas.dup3$pais_1 == atletas.dup3$pais_2)
which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
atletas.dup2$nombre[ind.dup2]
nombre.dup <- atletas.dup2$nombre[ind.dup2]
nombre.dup
nombre.dup3 <- atletas.dup3$nombre[ind.dup3]
nombre.dup3
nombre.dup
atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2
ind.dup2
atletas.dup2
# Analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 != atletas.dup3$pais_2)
ind.dup3
# Analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 != atletas.dup3$pais_2)
nombre.dup3 <- atletas.dup3$nombre[ind.dup3]
nombre.dup3
atletas$nombre %in% nombre.dup
atletas[ind2,]
# Se comprobara si hay datos duplicados en la columna
# nombre
nrow(atletas)[1]          # hay 11085 registros
df_status(atletas$nombre) # hay 11062 valores unicos
length(unique(atletas$nombre))
# al parecer hay datos repetidos
dup <- atletas$nombre[duplicated(atletas$nombre)]
ind <- which(atletas$nombre %in% dup)
atletas.dup <- atletas[ind,]
sum(table(atletas.dup$nombre) == 2)
num_disciplina <- rep(c("disciplina_1", "disciplina_2"),23)
num_pais <- rep(c("pais_1", "pais_2"),23)
atletas.dup$num_disciplina <- num_disciplina
atletas.dup$num_pais <- num_pais
atletas.dup %>%
select(-pais, -num_pais) %>%
pivot_wider(names_from = num_disciplina,
values_from = disciplina) -> atletas.dup2
atletas.dup2
atletas.dup %>%
select(-disciplina,-num_disciplina) %>%
pivot_wider(names_from = num_pais,
values_from = pais) -> atletas.dup3
atletas.dup3
# Analizaremos si disciplina 1 y discplina 2 coinciden :
atletas.dup2[atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2,]
# Analizaremos si disciplina 1 y discplina 2 coinciden :
atletas.dup2[atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2,]
# entonces, existen 2 registros duplicados, se encuentran
# en las posiciones:
ind.dup2 <- which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
nombre.dup <- atletas.dup2$nombre[ind.dup2]
nombre.dup
# Analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 != atletas.dup3$pais_2)
nombre.dup3 <- atletas.dup3$nombre[ind.dup3]
nombre.dup3
nombre.dup3 <- atletas.dup3$nombre[ind.dup3]
# Se debe eliminar estos 2 registros de la data original
ind2 <- which(atletas$nombre %in% nombre.dup)
atletas[ind2,]
atletas[ind2,]
# al parecer, hubo un error de digitacion. Se la busco en
# Google. Todo indica que Portela Teresa tiene nacionalidad
# espaniola. Por lo tanto, se eliminaran las filas 255 y 7835.
atletas2 <- atletas[-c(255,7835),]
nombre.dup3
nombre.dup
# Ahora, analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 != atletas.dup3$pais_2)
nombre.dup3
nombre.dup2 <- atletas.dup2$nombre[ind.dup2]
# Vemos si los nombres eliminados anteriormente aparecen
# en este analisis
nombre.dup2 %in% nombre.dup3
nombre.dup2[2]
# no lo tomaremos en cuenta en este analisis
nombre.dup3
# no lo tomaremos en cuenta en este analisis
nombre.dup3 <- nombre.dup3[-8]
nombre.dup3
# Luego, se procedera a eliminar los datos incorrectos
ind3 <- which(atletas$nombre %in% nombre.dup3)
ind3
atletas2[ind3,]
atletas2[ind3,c(1,2)]
ind3
atletas[320,]
"a" %in% c("solo","papa","a")
c("solo","papa","a") %in% "a"
which(atletas$nombre %in% nombre.dup3)
# Luego, se procedera a eliminar los datos incorrectos
ind3 <- which(atletas$nombre %in% nombre.dup3)
atletas2[ind3,]
# Ahora, analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 != atletas.dup3$pais_2)
nombre.dup3 <- atletas.dup3$nombre[ind.dup3]
nombre.dup3
# Vemos si los nombres eliminados anteriormente aparecen
# en este analisis
nombre.dup2 %in% nombre.dup3
nombre.dup2[2] # este nombre aparece, como ya se elimino
# no lo tomaremos en cuenta en este analisis
nombre.dup3 <- nombre.dup3[-8]
nombre.dup3
nombre.dup3 %in% atletas$nombre
# Luego, se procedera a eliminar los datos incorrectos
ind3 <- which(atletas$nombre %in% nombre.dup3)
atletas2[ind3,]
View(atletas)
atletas2[ind3,c(1,2)]
ind3
atletas[ind3,c(1,2)]
# Luego, se procedera a eliminar los datos incorrectos
ind3 <- which(atletas2$nombre %in% nombre.dup3)
ind3
atletas[ind3,c(1,2)]
atletas2[ind3,c(1,2)]
ind3
atletas[319,]
atletas[320,]
atletas2[319,]
atletas2[320,]
ind3
atletas2[3664,]
atletas2[3665,]
atletas2[ind3,c(1,2)]
# Se comprobara si hay datos duplicados en la columna
# nombre
nrow(atletas)[1]          # hay 11085 registros
df_status(atletas$nombre) # hay 11062 valores unicos
length(unique(atletas$nombre))
# al parecer hay datos repetidos
dup <- atletas$nombre[duplicated(atletas$nombre)]
ind <- which(atletas$nombre %in% dup)
atletas.dup <- atletas[ind,]
sum(table(atletas.dup$nombre) == 2)
num_disciplina <- rep(c("disciplina_1", "disciplina_2"),23)
num_pais <- rep(c("pais_1", "pais_2"),23)
atletas.dup$num_disciplina <- num_disciplina
atletas.dup$num_pais <- num_pais
atletas.dup %>%
select(-pais, -num_pais) %>%
pivot_wider(names_from = num_disciplina,
values_from = disciplina) -> atletas.dup2
atletas.dup2
atletas.dup %>%
select(-disciplina,-num_disciplina) %>%
pivot_wider(names_from = num_pais,
values_from = pais) -> atletas.dup3
atletas.dup3
# Analizaremos si disciplina 1 y discplina 2 coinciden :
atletas.dup2[atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2,]
# entonces, existen 2 registros duplicados, se encuentran
# en las posiciones:
ind.dup2 <- which(atletas.dup2$disciplina_1 == atletas.dup2$disciplina_2)
nombre.dup2 <- atletas.dup2$nombre[ind.dup2]
nombre.dup2
atletas[ind2,]
nombre.dup2
# Se debe 1 solo regstro, la de ALI Mohammed. PORTELA Teresa
# es una deportista portuguesa. Existe otra PORTEL Teresa de
# nacionalidad espaniola
ind2 <- which(atletas$nombre %in% nombre.dup2)
ind2
atletas[ind2,]
atletas2 <- atletas[-c(255),]
dim(atletas)
dim(atletas2)
# Ahora, analizaremos si pais 1 y pais 2 coinciden
ind.dup3 <- which(atletas.dup3$pais_1 != atletas.dup3$pais_2)
nombre.dup3 <- atletas.dup3$nombre[ind.dup3]
# Vemos si los nombres eliminados anteriormente aparecen
# en este analisis
nombre.dup2 %in% nombre.dup3
nombre.dup2[2] # este nombre aparece, como ya se elimino
# no lo tomaremos en cuenta en este analisis
nombre.dup3 <- nombre.dup3[-8]
# Luego, se procedera a eliminar los datos incorrectos
ind3 <- which(atletas2$nombre %in% nombre.dup3)
atletas2[ind3,c(1,2)]
atl.pais <- atletas2 %>% group_by(pais,nombre) %>% count()
atl.pais <- atletas2 %>% group_by(pais,nombre) %>% count()
atl.pais
atl.pais2 <- atl.pais %>% group_by(pais) %>% count(sort = T)
atl.pais2
i <- which(duplicated(atletas2$nombre))
atletas2[c(1703,1704),]
peru <- atletas2 %>%
filter(pais == "Peru") %>%
group_by(disciplina) %>%
count(sort = T)
peru
nom <- c("ana","ana","ana","pedro","pedro","luis","leandro","nadia","manuel")
pa <- c("peru","peru","peru","chile","chile","colombia","peru","colombia","peru")
dis <- c("d1","d2","d3","d2","d5","d3","d6","d9","d2")
df <- data.frame(nom,pa, dis)
colnames(df)
# numero de atletas por pais
df %>% group_by(pa,dis) %>% count
#
df %>% group_by(pa, nom) %>% summarise(conteo = n()) %>%
group_by(pa) %>% count()
